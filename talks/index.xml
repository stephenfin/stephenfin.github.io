<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Talks on Stephen Finucane (Fin-oo-can)</title>
    <link>https://that.guru/talks/</link>
    <description>Recent content in Talks on Stephen Finucane (Fin-oo-can)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-IE</language>
    <copyright>This work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License.</copyright>
    <lastBuildDate>Sat, 23 Mar 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://that.guru/talks/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Will somebody *please* tell me what is going on?</title>
      <link>https://that.guru/talks/will-someone-please-tell-me-whats-going-on/</link>
      <pubDate>Sat, 23 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://that.guru/talks/will-someone-please-tell-me-whats-going-on/</guid>
      <description>Software rarely stands still (unless it&amp;rsquo;s TeX). Things are added, things are removed, things break and are then hopefully fixed. Managing this, from both the developer and user perspective, can be tough.
In this talk I explored some of the tools that one can use to make this process easier, such as debtcollector, reno and pbr, and contrast these with alternatives used in other projects. The idea was to raise awareness of these tools mainly among developers of open source libraries but also anyone that works on a Python library or application that wishes to maintain stable interfaces and/or document changes in their product.</description>
    </item>
    
  </channel>
</rss>