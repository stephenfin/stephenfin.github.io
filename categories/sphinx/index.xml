<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sphinx on Stephen Finucane (Fin-oo-can)</title>
    <link>https://that.guru/categories/sphinx/</link>
    <description>Recent content in Sphinx on Stephen Finucane (Fin-oo-can)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-IE</language>
    <lastBuildDate>Sat, 29 Feb 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://that.guru/categories/sphinx/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>A Lion, A Head, and A Dash of YAML</title>
      <link>https://that.guru/talks/a-lion-a-head-and-a-dash-of-yaml-pycon-limerick/</link>
      <pubDate>Sat, 29 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://that.guru/talks/a-lion-a-head-and-a-dash-of-yaml-pycon-limerick/</guid>
      <description>&lt;p&gt;This talk, delivered at &lt;a href=&#34;https://pyconlimerick.github.io/#abstracts-for-morning-session-2&#34;&gt;PyCon Limerick 2020&lt;/a&gt;, was a repeat of a talk I&amp;rsquo;d
previously given at &lt;a href=&#34;https://that.guru/talks/a-lion-a-head-and-a-dash-of-yaml/&#34;&gt;FOSDEM 2018&lt;/a&gt;. Once again, this talk provided a quick
dive into the somewhat complicated world of Sphinx extensions.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If you&amp;rsquo;ve read documentation for a Python library, you&amp;rsquo;ve almost certainly
seen the end product of a docutils or Sphinx-powered documentation toolchain.
Sphinx builds upon docutils and together, they provide the tool of choice for
a majority of projects across the Python ecosystem.&lt;/p&gt;
&lt;p&gt;One of the great advantages of both tools is their inherent customisability
and extensibility: not only can you customise the output of the tools, be
that HTML, LaTeX or something else, but you can also write extensions that
allow you to do things up to and including automatically generating
documentation for you.&lt;/p&gt;
&lt;p&gt;In this presentation, which is part talk, part workshop, we&amp;rsquo;ll look at the
basics for building and using your own extension for these tools, with the
goal of solving the kinds of issues that have been seen in large Python-first
communities like OpenStack. Some prior Python experience will be necessary,
but no Sphinx or docutils experience is assumed.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;More information is available on the &lt;a href=&#34;https://pyconlimerick.github.io/#abstracts-for-morning-session-2&#34;&gt;PyCon Limerick 2020&lt;/a&gt; website.&lt;/p&gt;

&lt;script async class=&#34;speakerdeck-embed&#34; data-id=&#34;a494e97bf79a480ba7d4ea9e728d734a&#34; data-ratio=&#34;1.77777777777778&#34; src=&#34;//speakerdeck.com/assets/embed.js&#34;&gt;&lt;/script&gt;


</description>
    </item>
    
    <item>
      <title>Who Needs pandoc When You Have Sphinx?</title>
      <link>https://that.guru/talks/who-needs-pandoc-when-you-have-sphinx/</link>
      <pubDate>Sat, 02 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://that.guru/talks/who-needs-pandoc-when-you-have-sphinx/</guid>
      <description>&lt;p&gt;This was a talk I gave at &lt;a href=&#34;https://fosdem.org/2019/schedule/event/sphinx/&#34;&gt;FOSDEM 2019&lt;/a&gt;. In this talk, subtitled &amp;ldquo;An
exploration of the parsers and builders of the Sphinx documentation tool&amp;rdquo;, I
explored some of the less well known aspects of both Sphinx and docutils.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Using Sphinx doesn&amp;rsquo;t necessarily mean using reStructuredText for input and
HTML for output. We explore Sphinx&amp;rsquo;s newfound support for Markdown as well as
it&amp;rsquo;s broad range output formats available, before moving onto an overview of
how you can develop your parser and builder extensions.&lt;/p&gt;
&lt;p&gt;Sphinx is the documentation tool of choice for an increasing amount of
projects, both inside and outside Python. Thanks to the success of platforms
like Read the Docs, building documentation with this toolkit has never been
easier. Most people associate Sphinx with the reStructuredText syntax
provided by docutils, and typically output documents to HTML and,
occasionally, PDF. However, Sphinx is capable of so much more. Since Sphinx
1.8, it is possible to use source documents written in the CommonMark syntax,
while the amount of builders provided both in-tree and out-of-tree continue
to grow.&lt;/p&gt;
&lt;p&gt;Through this talk, we explore how one can build their documentation using
Sphinx and Markdown source documents. We detail the variety of builders
available as part of the standard Sphinx installation and as third-party
extensions, including some basic configuration tips for the more commonly
useful ones like man pages and LaTeX/PDF. Finally, we provide a high-level
overview on how you can go about writing your own extensions to parse other
plain-text documentation formats and output in additional documentation
format. The latter of these will touch on docutils, a foundational component
of Sphinx, so one can understand the intermediate documentation model it
provides.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Full information is available on the &lt;a href=&#34;https://fosdem.org/2019/schedule/event/sphinx/&#34;&gt;FOSDEM&lt;/a&gt; website.&lt;/p&gt;

&lt;script async class=&#34;speakerdeck-embed&#34; data-id=&#34;c7922a6d0b2c4e6a81cf63d6bba906ae&#34; data-ratio=&#34;1.77777777777778&#34; src=&#34;//speakerdeck.com/assets/embed.js&#34;&gt;&lt;/script&gt;


</description>
    </item>
    
    <item>
      <title>A Lion, A Head, and A Dash of YAML</title>
      <link>https://that.guru/talks/a-lion-a-head-and-a-dash-of-yaml/</link>
      <pubDate>Sun, 04 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://that.guru/talks/a-lion-a-head-and-a-dash-of-yaml/</guid>
      <description>&lt;p&gt;This talk, delivered at &lt;a href=&#34;https://archive.fosdem.org/2018/schedule/event/automating_documentation_with_sphinx_extensions/&#34;&gt;FOSDEM 2018&lt;/a&gt;, provided a quick dive into the
somewhat complicated world of Sphinx extensions. Sphinx is an incredibly
powerful tool but, surprisingly for a documentation, suffers from poor quality
documentation. This talk aimed to fill in some of the blanks for users that
aren&amp;rsquo;t so familiar with the tool and its inner workings.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The Sphinx documentation tool provides tremendous extensibility and theming
options; options which are massively underutilized. We demonstrate how you
can go about writing your own extensions and themes for Sphinx and ultimately
how you treat your docs like code.&lt;/p&gt;
&lt;p&gt;If you work in open source, then it&amp;rsquo;s increasingly likely that you&amp;rsquo;ve come
across the Sphinx documentation tool. Originally written by and for the
Python community, the past few years have seen an increasingly rapid adoption
by non-Python projects. Recent adopters of Sphinx include the Linux kernel,
Open vSwitch and the Dataplane Development Kit (DPDK), while other projects
such as QEMU are preparing plans to migrate. Meanwhile, the Python ecosystem
itself has only grown in strength and communities such as OpenStack have
adopted the tool and have made extensive use of it.&lt;/p&gt;
&lt;p&gt;Unfortunately, despite the widespread adoption and existence of multiple
extensions, Sphinx is not always a very well understood tool. Extensions
provide a pathway to greater functionality, for example, automatically
generating documentation or generating docs in different output formats.
Themes, meanwhile, provide a way to give a consistent, project-focused feel
to your docs. The OpenStack community makes significant use of these
extensibility features, which allow us to solve a number of problems in an
automated manner.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;How can I avoid documenting a command line application twice: once in code
and once in my docs?&lt;/li&gt;
&lt;li&gt;How can I take a large dataset and automatically convert this into multiple
human-readable documents?&lt;/li&gt;
&lt;li&gt;How can I move documents about without breaking links?&lt;/li&gt;
&lt;li&gt;How can I automatically spell-check my documents?&lt;/li&gt;
&lt;li&gt;How can I style my docs to match my project website?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Through this talk we will demonstrate how each of the above problems, and how
many more, can be solved in an easy and automated manner through the power of
Sphinx extensions and themes. We also demonstrate how you can share your
extensions and themes with the world, if you&amp;rsquo;re so inclined&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;More information is available on the &lt;a href=&#34;https://archive.fosdem.org/2018/schedule/event/automating_documentation_with_sphinx_extensions/&#34;&gt;FOSDEM&lt;/a&gt; website.&lt;/p&gt;

&lt;script async class=&#34;speakerdeck-embed&#34; data-id=&#34;07094f5da49e4430b308685cc82080ff&#34; data-ratio=&#34;1.77777777777778&#34; src=&#34;//speakerdeck.com/assets/embed.js&#34;&gt;&lt;/script&gt;


</description>
    </item>
    
  </channel>
</rss>
